#include <a_samp>
#include <zcmd>
#include <sscanf2>
#include <sii>
#include <streamer>

#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_GREY 0xB4B5B7FF
#define COLOR_CYAN 0x00EAEAFF
#define COLOR_DRED  0xD9000000

#define MAX_DOORS 10
#define MAX_SAFES 10

new SAFE_DIALOG_1 = 1;
new SAFEPUT_DIALOG = 2;
new SAFETAKE_DIALOG = 3;
new SAFEWEPSLOT_DIALOG = 4;
new SAFEKEVSLOT_DIALOG = 5;
new SAFETAKEWEP_DIALOG = 6;
new SAFETAKEKEV_DIALOG = 7;

enum dInfo
{
	dName[128],
	Text3D: dLabel,
	Float:dEntranceX,
	Float:dEntranceY,
	Float:dEntranceZ,
	dEntranceVW,
	dEntranceInt,
	dPickUpModel,
	Float:dExitX,
	Float:dExitY,
	Float:dExitZ,
	dExitVW,
	dExitInt,
	dPickup,
	dPickupInt

}
new DoorInfo[MAX_DOORS][dInfo];
new DoorIDTaken[MAX_DOORS];

enum sInfo
{
	sName[128],
	sID,
	Text3D: sLabel,
	Float: sPosX,
	Float: sPosY,
	Float: sPosZ,
	sInt,
	sVW,
	sPickup,
	sGun1
}
new SafeInfo[MAX_SAFES][sInfo];
new SafeIDTaken[MAX_SAFES];
new CurrentSafe[MAX_SAFES];

stock LoadDoors()
{
    new dStr[128];
    new file[128];
	for(new idx=1; idx<MAX_DOORS; idx++)
	{
		format(file, sizeof(file), "Doors/%d.ini", idx);
	    if(fexist(file) && INI_Open(file))
	    {
         	DoorInfo[idx][dPickUpModel] = INI_ReadInt("PickupModel");
         	DoorInfo[idx][dEntranceX] = INI_ReadFloat("EnterX");
         	DoorInfo[idx][dEntranceY] = INI_ReadFloat("EnterY");
         	DoorInfo[idx][dEntranceZ] = INI_ReadFloat("EnterZ");
         	DoorInfo[idx][dExitX]  = INI_ReadFloat("ExitX");
         	DoorInfo[idx][dExitY]  = INI_ReadFloat("ExitY");
         	DoorInfo[idx][dExitZ]  = INI_ReadFloat("ExitZ");
         	//DoorInfo[idx][dInt] = INI_ReadInt("Int");
         	DoorInfo[idx][dExitVW] = INI_ReadInt("ExitVW");
         	DoorInfo[idx][dExitInt] = INI_ReadInt("ExitInt");
         	DoorInfo[idx][dEntranceVW] = INI_ReadInt("EnterVW");
         	DoorInfo[idx][dEntranceInt] = INI_ReadInt("EnterInt");
         	DoorInfo[idx][dPickupInt] = INI_ReadInt("IntPickup");
         	
         	INI_ReadString(DoorInfo[idx][dName],"Name", 128);
         	format(dStr, sizeof(dStr), "%s\nDoor ID: %d",DoorInfo[idx][dName], idx);

			DoorInfo[idx][dLabel] = CreateDynamic3DTextLabel(dStr, COLOR_WHITE, DoorInfo[idx][dEntranceX], DoorInfo[idx][dEntranceY], DoorInfo[idx][dEntranceZ]+0.9, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
			DoorInfo[idx][dPickup] = CreateDynamicPickup(DoorInfo[idx][dPickUpModel], 23, DoorInfo[idx][dEntranceX], DoorInfo[idx][dEntranceY], DoorInfo[idx][dEntranceZ], 0, 0, -1, 70.0);
			DoorInfo[idx][dPickupInt] =  CreateDynamicPickup(DoorInfo[idx][dPickUpModel], 23, DoorInfo[idx][dExitX], DoorInfo[idx][dExitY], DoorInfo[idx][dExitZ], 0, 0, -1, 70.0);
			DoorIDTaken[idx] = 1;
			
			INI_Close();
		}
	}
	return 1;
}

stock GetAvailableID()
{
	for(new i = 1; i<MAX_DOORS; i++)
	{
	    if(DoorIDTaken[i] == 0) return i;
	}
	return 1;
}

SaveDoors()
{
    new file[128];
	for(new i= 1; i < MAX_DOORS; i++)
	{
        if(DoorIDTaken[i] == 0) continue;
	    format(file, sizeof(file), "Doors/%d.ini", i);
	    if(INI_Open(file))
	    {
        	INI_WriteInt("PickupModel",DoorInfo[i][dPickUpModel]);
        	INI_WriteFloat("EnterX",DoorInfo[i][dEntranceX]);
        	INI_WriteFloat("EnterY",DoorInfo[i][dEntranceY]);
        	INI_WriteFloat("EnterZ",DoorInfo[i][dEntranceZ]);
        	INI_WriteFloat("ExitX",DoorInfo[i][dExitX]);
        	INI_WriteFloat("ExitY",DoorInfo[i][dExitY]);
        	INI_WriteFloat("ExitZ",DoorInfo[i][dExitZ]);
        	//INI_WriteInt("Int",DoorInfo[i][dInt]);
        	INI_WriteInt("ExitVW",DoorInfo[i][dExitVW]);
        	INI_WriteInt("ExitInt",DoorInfo[i][dExitInt]);
        	INI_WriteInt("EnterVW",DoorInfo[i][dEntranceVW]);
        	INI_WriteInt("EnterInt",DoorInfo[i][dEntranceInt]);
            INI_WriteString("Name", DoorInfo[i][dName]);
            INI_WriteString("IntPickup",DoorInfo[i][dPickupInt]);
			INI_Save();
			INI_Close();
		}
	}
	return 1;
}

stock GetAvailableSID()
{
	for(new i = 1; i<MAX_SAFES; i++)
	{
	    if(SafeIDTaken[i] == 0) return i;
	}
	return 1;
}

SaveSafes()
{
    new file[128];
	for(new i= 1; i < MAX_SAFES; i++)
	{
        if(SafeIDTaken[i] == 0) continue;
	    format(file, sizeof(file), "Safes/%d.ini", i);
	    if(INI_Open(file))
	    {
	    	INI_WriteInt("ID", SafeInfo[i][sID]);
        	INI_WriteFloat("PosX",SafeInfo[i][sPosX]);
        	INI_WriteFloat("PosY",SafeInfo[i][sPosY]);
        	INI_WriteFloat("PosZ",SafeInfo[i][sPosZ]);
        	INI_WriteInt("VW",SafeInfo[i][sVW]);
        	INI_WriteInt("Int",SafeInfo[i][sInt]);
            INI_WriteString("Name", SafeInfo[i][sName]);
            INI_WriteInt("GSlot1", SafeInfo[i][sGun1]);
			INI_Save();
			INI_Close();
		}
	}
	return 1;
}

stock LoadSafes()
{
    new dStr[128];
    new file[128];
	for(new idx=1; idx<MAX_SAFES; idx++)
	{
		format(file, sizeof(file), "Safes/%d.ini", idx);
	    if(fexist(file) && INI_Open(file))
	    {
	    	SafeInfo[idx][sID] = INI_ReadInt("ID");
	    	SafeInfo[idx][sPosX] = INI_ReadInt("PosX");
	    	SafeInfo[idx][sPosY] = INI_ReadInt("PosY");
	    	SafeInfo[idx][sPosZ] = INI_ReadInt("PosZ");
	    	SafeInfo[idx][sVW] = INI_ReadInt("VW");
	    	SafeInfo[idx][sInt] = INI_ReadInt("Int");
	    	SafeInfo[idx][sGun1] = INI_ReadInt("SGSlot1");
         	
         	INI_ReadString(SafeInfo[idx][sName],"Name", 128);
         	format(dStr, sizeof(dStr), "%s's Safe\nSafe ID: %d",SafeInfo[idx][sName], idx);

			SafeInfo[idx][sLabel] = CreateDynamic3DTextLabel(dStr, COLOR_WHITE, SafeInfo[idx][sPosX], SafeInfo[idx][sPosY], SafeInfo[idx][sPosZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
			SafeInfo[idx][sPickup] = CreateDynamicPickup(1210, 23, SafeInfo[idx][sPosX], SafeInfo[idx][sPosY], SafeInfo[idx][sPosZ], 0, 0, -1, 70.0);
			SafeIDTaken[idx] = 1;
			
			INI_Close();
		}
	}
	return 1;
}
main()
{
	print("\n----------------------------------");
	print("McClain's Test Server");
	print("----------------------------------\n");
}

public OnGameModeInit()
{
	SetGameModeText("McClain's Test Server");
	AddPlayerClass(294,2747.6465,-1400.1168,35.9162,89.4996,0,0,0,0,0,0); // Spawn Point

	return 1;
}

public OnPlayerSpawn(playerid)
{
	SetPlayerPos(playerid, 2747.6465,-1400.1168,35.9162);
	SetPlayerSkin(playerid, 294);
	SendClientMessage(playerid, COLOR_WHITE, "Type /help to show the list of commands.");
	LoadDoors();
	LoadSafes();
	//restaurant
	CreateDynamicObject(14623,222.30000000,314.16000000,960.51000000,0.00000000,0.00000000,36.00000000); //
	CreateDynamicObject(10722,221.61000000,324.33000000,976.61000000,270.00000000,180.01000000,359.25000000); //
	CreateDynamicObject(5737,228.51000000,284.75000000,960.95000000,0.00000000,0.00000000,90.50000000); //
	CreateDynamicObject(5737,199.56000000,294.19000000,960.95000000,0.00000000,0.00000000,54.24000000); //
	CreateDynamicObject(5737,192.14000000,311.96000000,960.95000000,0.00000000,0.00000000,16.49000000); //
	CreateDynamicObject(5737,196.56000000,331.01000000,960.95000000,0.00000000,0.00000000,340.24000000); //
	CreateDynamicObject(5737,245.93000000,295.11000000,960.95000000,0.00000000,0.00000000,128.50000000); //
	CreateDynamicObject(5737,253.43000000,312.20000000,960.95000000,0.00000000,0.00000000,161.25000000); //
	CreateDynamicObject(5737,248.32000000,331.52000000,960.95000000,0.00000000,0.00000000,201.73000000); //
	CreateDynamicObject(5737,232.94000000,343.58000000,960.95000000,0.00000000,0.00000000,237.73000000); //
	CreateDynamicObject(5737,214.07000000,344.72000000,960.95000000,0.00000000,0.00000000,271.73000000); //
	CreateDynamicObject(5737,198.07000000,334.42000000,960.95000000,0.00000000,0.00000000,311.73000000); //
	CreateDynamicObject(10153,257.69000000,299.55000000,953.19000000,0.00000000,0.00000000,22.00000000); //
	CreateDynamicObject(10153,258.54000000,297.44000000,953.19000000,0.00000000,0.00000000,22.00000000); //
	CreateDynamicObject(1649,234.71000000,312.37000000,956.63000000,0.00000000,0.00000000,253.99000000); //
	CreateDynamicObject(1649,227.82000000,325.41000000,956.63000000,0.00000000,0.00000000,326.20000000); //
	CreateDynamicObject(1649,234.59000000,316.57000000,956.63000000,0.00000000,0.00000000,289.49000000); //
	CreateDynamicObject(1649,233.37000000,308.64000000,956.63000000,0.00000000,0.00000000,245.99000000); //
	CreateDynamicObject(1649,230.80000000,305.27000000,956.63000000,0.00000000,0.00000000,217.99000000); //
	CreateDynamicObject(1649,227.93000000,303.26000000,956.63000000,0.00000000,0.00000000,213.99000000); //
	CreateDynamicObject(1649,224.00000000,301.98000000,956.63000000,0.00000000,0.00000000,181.99000000); //
	CreateDynamicObject(1649,216.56000000,303.11000000,956.63000000,0.00000000,0.00000000,143.99000000); //
	CreateDynamicObject(1649,220.53000000,301.87000000,956.63000000,0.00000000,0.00000000,181.99000000); //
	CreateDynamicObject(1649,216.55000000,303.11000000,956.63000000,0.00000000,0.00000000,323.98000000); //
	CreateDynamicObject(1649,220.53000000,301.87000000,956.63000000,0.00000000,0.00000000,1.99000000); //
	CreateDynamicObject(1649,224.00000000,301.98000000,956.63000000,0.00000000,0.00000000,1.99000000); //
	CreateDynamicObject(1649,227.93000000,303.26000000,956.63000000,0.00000000,0.00000000,33.99000000); //
	CreateDynamicObject(1649,230.80000000,305.27000000,956.63000000,0.00000000,0.00000000,37.99000000); //
	CreateDynamicObject(1649,233.37000000,308.64000000,956.63000000,0.00000000,0.00000000,65.99000000); //
	CreateDynamicObject(1649,234.71000000,312.37000000,956.63000000,0.00000000,0.00000000,73.99000000); //
	CreateDynamicObject(1649,234.58000000,316.57000000,956.63000000,0.00000000,0.00000000,109.49000000); //
	CreateDynamicObject(1649,223.79000000,326.74000000,956.63000000,0.00000000,0.00000000,358.20000000); //
	CreateDynamicObject(1649,220.53000000,326.85000000,956.63000000,0.00000000,0.00000000,358.20000000); //
	CreateDynamicObject(1649,216.59000000,325.53000000,956.63000000,0.00000000,0.00000000,38.20000000); //
	CreateDynamicObject(1649,213.17000000,322.90000000,956.63000000,0.00000000,0.00000000,38.19000000); //
	CreateDynamicObject(1649,210.83000000,319.41000000,956.63000000,0.00000000,0.00000000,74.19000000); //
	CreateDynamicObject(1649,209.91000000,316.17000000,956.63000000,0.00000000,0.00000000,74.19000000); //
	CreateDynamicObject(1649,209.99000000,312.00000000,956.63000000,0.00000000,0.00000000,108.19000000); //
	CreateDynamicObject(1649,209.99000000,312.00000000,956.63000000,0.00000000,0.00000000,288.19000000); //
	CreateDynamicObject(1649,209.91000000,316.17000000,956.63000000,0.00000000,0.00000000,254.19000000); //
	CreateDynamicObject(1649,210.83000000,319.41000000,956.63000000,0.00000000,0.00000000,254.19000000); //
	CreateDynamicObject(1649,213.17000000,322.90000000,956.63000000,0.00000000,0.00000000,218.19000000); //
	CreateDynamicObject(1649,216.59000000,325.53000000,956.63000000,0.00000000,0.00000000,218.19000000); //
	CreateDynamicObject(1649,220.53000000,326.85000000,956.63000000,0.00000000,0.00000000,180.20000000); //
	CreateDynamicObject(1649,223.81000000,326.75000000,956.63000000,0.00000000,0.00000000,178.20000000); //
	CreateDynamicObject(1649,227.84000000,325.44000000,956.63000000,0.00000000,0.00000000,146.20000000); //
	CreateDynamicObject(643,206.13000000,312.11000000,955.43000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(643,207.03000000,307.96000000,955.43000000,0.00000000,0.00000000,102.00000000); //
	CreateDynamicObject(643,205.49000000,315.05000000,955.43000000,0.00000000,0.00000000,130.00000000); //
	CreateDynamicObject(643,212.80000000,329.74000000,955.43000000,0.00000000,0.00000000,54.00000000); //
	CreateDynamicObject(643,210.15000000,327.17000000,955.43000000,0.00000000,0.00000000,319.99000000); //
	CreateDynamicObject(2637,212.11000000,315.90000000,955.37000000,0.00000000,0.00000000,74.50000000); //
	CreateDynamicObject(2639,210.88000000,316.34000000,955.59000000,0.00000000,0.00000000,254.49000000); //
	CreateDynamicObject(10722,222.82000000,302.18000000,976.64000000,270.00000000,180.00000000,179.25000000); //
	CreateDynamicObject(2784,222.55000000,305.92000000,959.41000000,270.00000000,179.84000000,358.09000000); //
	CreateDynamicObject(2784,228.10000000,310.33000000,959.41000000,270.00000000,180.04000000,88.30000000); //
	CreateDynamicObject(2784,228.19000000,318.48000000,959.41000000,270.00000000,180.04000000,88.30000000); //
	CreateDynamicObject(2784,223.76000000,324.03000000,959.41000000,270.00000000,180.04000000,178.30000000); //
	CreateDynamicObject(2784,218.32000000,319.59000000,959.41000000,270.00000000,180.04000000,268.30000000); //
	CreateDynamicObject(2784,218.12000000,311.42000000,959.41000000,270.00000000,180.03000000,268.29000000); //
	CreateDynamicObject(2638,216.32000000,313.36000000,955.62000000,0.00000000,0.00000000,13.50000000); //
	CreateDynamicObject(638,220.04000000,326.24000000,955.66000000,0.00000000,0.00000000,267.25000000); //
	CreateDynamicObject(2639,210.33000000,314.34000000,955.59000000,0.00000000,0.00000000,254.49000000); //
	CreateDynamicObject(2637,211.56000000,313.95000000,955.37000000,0.00000000,0.00000000,74.50000000); //
	CreateDynamicObject(2639,213.50000000,322.53000000,955.60000000,0.00000000,0.00000000,218.00000000); //
	CreateDynamicObject(2637,214.33000000,321.59000000,955.37000000,0.00000000,0.00000000,38.50000000); //
	CreateDynamicObject(2639,216.90000000,325.12000000,955.59000000,0.00000000,0.00000000,218.00000000); //
	CreateDynamicObject(2637,223.67000000,324.71000000,955.37000000,0.00000000,0.00000000,350.49000000); //
	CreateDynamicObject(638,211.48000000,319.82000000,955.66000000,0.00000000,0.00000000,343.25000000); //
	CreateDynamicObject(16151,222.62000000,297.49000000,955.26000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1487,224.67000000,298.49000000,956.06000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1487,224.48000000,298.36000000,956.06000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1509,225.41000000,298.45000000,956.06000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1510,223.53000000,298.37000000,955.87000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1512,222.86000000,298.46000000,956.06000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1520,225.99000000,297.88000000,955.89000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1544,222.39000000,298.42000000,955.87000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2941,220.99000000,298.41000000,955.96000000,0.00000000,0.00000000,177.99000000); //
	CreateDynamicObject(14651,207.65000000,320.22000000,957.00000000,0.00000000,0.00000000,342.00000000); //
	CreateDynamicObject(2639,223.90000000,325.86000000,955.59000000,0.00000000,0.00000000,170.00000000); //
	CreateDynamicObject(2639,225.85000000,325.51000000,955.59000000,0.00000000,0.00000000,169.99000000); //
	CreateDynamicObject(2637,217.69000000,324.04000000,955.37000000,0.00000000,0.00000000,38.49000000); //
	CreateDynamicObject(2637,219.64000000,320.60000000,955.37000000,0.00000000,0.00000000,308.73000000); //
	CreateDynamicObject(2637,225.65000000,324.39000000,955.37000000,0.00000000,0.00000000,350.49000000); //
	CreateDynamicObject(2639,216.21000000,317.72000000,955.59000000,0.00000000,0.00000000,308.99000000); //
	CreateDynamicObject(2638,218.39000000,319.51000000,955.62000000,0.00000000,0.00000000,309.25000000); //
	CreateDynamicObject(2639,220.67000000,321.37000000,955.59000000,0.00000000,0.00000000,128.49000000); //
	CreateDynamicObject(2637,217.15000000,318.45000000,955.37000000,0.00000000,0.00000000,308.73000000); //
	CreateDynamicObject(2639,215.71000000,316.10000000,955.59000000,0.00000000,0.00000000,194.23000000); //
	CreateDynamicObject(2637,215.84000000,314.88000000,955.37000000,0.00000000,0.00000000,13.73000000); //
	CreateDynamicObject(2637,216.59000000,311.83000000,955.37000000,0.00000000,0.00000000,13.72000000); //
	CreateDynamicObject(2639,216.94000000,310.72000000,955.59000000,0.00000000,0.00000000,13.98000000); //
	CreateDynamicObject(2639,220.63000000,302.56000000,955.59000000,0.00000000,0.00000000,353.98000000); //
	CreateDynamicObject(2639,218.57000000,302.77000000,955.59000000,0.00000000,0.00000000,353.97000000); //
	CreateDynamicObject(2637,220.82000000,303.68000000,955.37000000,0.00000000,0.00000000,353.72000000); //
	CreateDynamicObject(2637,218.79000000,303.90000000,955.37000000,0.00000000,0.00000000,353.72000000); //
	CreateDynamicObject(2639,218.76000000,307.36000000,955.59000000,0.00000000,0.00000000,287.98000000); //
	CreateDynamicObject(2637,219.90000000,307.73000000,955.37000000,0.00000000,0.00000000,107.72000000); //
	CreateDynamicObject(2638,221.47000000,308.24000000,955.62000000,0.00000000,0.00000000,287.75000000); //
	CreateDynamicObject(2637,223.06000000,308.69000000,955.37000000,0.00000000,0.00000000,107.72000000); //
	CreateDynamicObject(2638,224.53000000,309.23000000,955.62000000,0.00000000,0.00000000,287.74000000); //
	CreateDynamicObject(2637,224.17000000,312.89000000,955.37000000,0.00000000,0.00000000,109.72000000); //
	CreateDynamicObject(2639,227.18000000,310.03000000,955.59000000,0.00000000,0.00000000,107.98000000); //
	CreateDynamicObject(2639,228.30000000,311.34000000,955.59000000,0.00000000,0.00000000,353.98000000); //
	CreateDynamicObject(2637,228.43000000,312.48000000,955.37000000,0.00000000,0.00000000,173.72000000); //
	CreateDynamicObject(2638,228.56000000,314.04000000,955.62000000,0.00000000,0.00000000,353.74000000); //
	CreateDynamicObject(2637,228.82000000,315.73000000,955.37000000,0.00000000,0.00000000,173.72000000); //
	CreateDynamicObject(2639,228.91000000,316.91000000,955.59000000,0.00000000,0.00000000,173.98000000); //
	CreateDynamicObject(2639,222.20000000,321.81000000,955.59000000,0.00000000,0.00000000,258.49000000); //
	CreateDynamicObject(2637,223.33000000,321.52000000,955.37000000,0.00000000,0.00000000,258.73000000); //
	CreateDynamicObject(2638,224.92000000,321.25000000,955.62000000,0.00000000,0.00000000,259.00000000); //
	CreateDynamicObject(2637,226.54000000,320.90000000,955.37000000,0.00000000,0.00000000,258.72000000); //
	CreateDynamicObject(2639,227.71000000,320.78000000,955.59000000,0.00000000,0.00000000,78.48000000); //
	CreateDynamicObject(638,224.12000000,302.51000000,955.66000000,0.00000000,0.00000000,271.25000000); //
	CreateDynamicObject(2639,227.30000000,303.43000000,955.59000000,0.00000000,0.00000000,35.98000000); //
	CreateDynamicObject(2637,226.70000000,304.36000000,955.37000000,0.00000000,0.00000000,35.72000000); //
	CreateDynamicObject(638,232.75000000,308.46000000,955.66000000,0.00000000,0.00000000,337.24000000); //
	CreateDynamicObject(2639,230.92000000,305.95000000,955.59000000,0.00000000,0.00000000,37.97000000); //
	CreateDynamicObject(2637,230.26000000,306.84000000,955.37000000,0.00000000,0.00000000,37.72000000); //
	CreateDynamicObject(2639,233.77000000,312.26000000,955.59000000,0.00000000,0.00000000,73.97000000); //
	CreateDynamicObject(2639,234.32000000,314.19000000,955.59000000,0.00000000,0.00000000,73.97000000); //
	CreateDynamicObject(2637,233.26000000,314.50000000,955.37000000,0.00000000,0.00000000,73.72000000); //
	CreateDynamicObject(2637,232.69000000,312.56000000,955.37000000,0.00000000,0.00000000,73.71000000); //
	CreateDynamicObject(2639,225.23000000,313.29000000,955.59000000,0.00000000,0.00000000,109.97000000); //
	CreateDynamicObject(2637,226.12000000,309.61000000,955.37000000,0.00000000,0.00000000,107.72000000); //
	CreateDynamicObject(2638,222.86000000,312.49000000,955.62000000,0.00000000,0.00000000,289.74000000); //
	CreateDynamicObject(2637,221.02000000,311.87000000,955.37000000,0.00000000,0.00000000,109.72000000); //
	CreateDynamicObject(2639,219.91000000,311.43000000,955.59000000,0.00000000,0.00000000,289.98000000); //
	CreateDynamicObject(2639,224.97000000,317.30000000,955.59000000,0.00000000,0.00000000,111.97000000); //
	CreateDynamicObject(2637,223.89000000,316.94000000,955.37000000,0.00000000,0.00000000,111.72000000); //
	CreateDynamicObject(2638,222.34000000,316.28000000,955.62000000,0.00000000,0.00000000,291.74000000); //
	CreateDynamicObject(2637,220.83000000,315.75000000,955.37000000,0.00000000,0.00000000,111.72000000); //
	CreateDynamicObject(2639,219.69000000,315.27000000,955.59000000,0.00000000,0.00000000,291.97000000); //
	CreateDynamicObject(2784,225.69000000,319.03000000,959.69000000,358.00000000,180.00000000,62.26000000); //
	CreateDynamicObject(2784,221.34000000,310.98000000,959.69000000,357.99000000,179.99000000,61.51000000); //
	CreateDynamicObject(2784,221.40000000,319.28000000,959.69000000,357.99000000,179.99000000,114.25000000); //
	CreateDynamicObject(2784,225.26000000,310.51000000,959.69000000,357.99000000,179.99000000,114.25000000); //
	CreateDynamicObject(2796,210.79000000,300.42000000,957.77000000,0.00000000,0.00000000,324.00000000); //
	CreateDynamicObject(1536,210.02000000,300.95000000,954.96000000,0.00000000,0.00000000,324.00000000); //
	CreateDynamicObject(3467,228.59000000,320.41000000,955.67000000,0.00000000,0.00000000,312.00000000); //
	CreateDynamicObject(1778,208.38000000,302.49000000,954.96000000,0.00000000,0.00000000,240.00000000); //
	CreateDynamicObject(2718,224.71000000,333.25000000,958.27000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2815,234.45000000,317.03000000,957.07000000,270.25000000,0.00000000,289.25000000); //
	CreateDynamicObject(2815,234.52000000,315.93000000,957.04000000,270.25000000,0.00000000,109.75000000); //
	CreateDynamicObject(2257,233.17000000,308.31000000,956.99000000,0.00000000,0.00000000,246.00000000); //
	CreateDynamicObject(2257,233.25000000,308.26000000,956.99000000,0.00000000,0.00000000,65.99000000); //
	CreateDynamicObject(2255,227.58000000,303.63000000,957.00000000,0.00000000,0.00000000,213.25000000); //
	CreateDynamicObject(2255,228.29000000,302.92000000,957.00000000,0.00000000,0.00000000,33.49000000); //
	CreateDynamicObject(2256,216.82000000,302.99000000,957.08000000,0.00000000,0.00000000,143.75000000); //
	CreateDynamicObject(2256,216.76000000,302.91000000,957.08000000,0.00000000,0.00000000,323.75000000); //
	CreateDynamicObject(2258,209.83000000,312.42000000,956.84000000,0.00000000,0.00000000,288.25000000); //
	CreateDynamicObject(2258,209.88000000,312.43000000,956.84000000,0.00000000,0.00000000,108.25000000); //
	CreateDynamicObject(2266,211.35000000,319.41000000,956.47000000,0.00000000,0.00000000,73.50000000); //
	CreateDynamicObject(2266,210.36000000,319.75000000,956.47000000,0.00000000,0.00000000,253.50000000); //
	CreateDynamicObject(2276,220.26000000,326.34000000,956.96000000,0.00000000,0.00000000,359.00000000); //
	CreateDynamicObject(2276,220.32000000,327.34000000,956.96000000,0.00000000,0.00000000,180.24000000); //
	CreateDynamicObject(2281,227.87000000,324.77000000,956.67000000,0.00000000,0.25000000,326.25000000); //
	CreateDynamicObject(2281,228.46000000,325.61000000,956.67000000,0.00000000,0.25000000,146.25000000); //
	CreateDynamicObject(1367,208.04000000,304.21000000,955.61000000,0.00000000,0.00000000,110.00000000); //
	CreateDynamicObject(1367,228.40000000,324.35000000,955.61000000,0.00000000,0.00000000,326.00000000); //
	CreateDynamicObject(1367,233.83000000,317.14000000,955.61000000,0.00000000,0.00000000,290.00000000); //
	CreateDynamicObject(1367,215.96000000,304.12000000,955.61000000,0.00000000,0.00000000,146.00000000); //
	CreateDynamicObject(1367,210.68000000,311.47000000,955.61000000,0.00000000,0.00000000,110.00000000); //
	CreateDynamicObject(3920,220.57000000,296.86000000,958.40000000,0.00000000,0.00000000,1.00000000); //
	CreateDynamicObject(626,240.38000000,318.19000000,957.02000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(626,238.36000000,323.86000000,957.01000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(628,230.25000000,323.17000000,956.96000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(628,233.32000000,319.03000000,956.96000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(628,214.38000000,305.38000000,956.96000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(628,211.47000000,309.68000000,956.96000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(633,217.12000000,298.06000000,955.96000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(640,239.85000000,310.25000000,955.66000000,0.00000000,0.00000000,340.00000000); //
	CreateDynamicObject(640,231.65000000,329.96000000,955.66000000,0.00000000,0.00000000,58.00000000); //
	CreateDynamicObject(949,238.76000000,317.72000000,955.60000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(949,236.83000000,323.22000000,955.60000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2245,240.29000000,316.21000000,955.27000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2245,236.66000000,325.46000000,955.28000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2245,240.33000000,317.37000000,955.27000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2245,239.86000000,316.80000000,955.27000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2245,239.40000000,317.53000000,955.27000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2245,237.71000000,324.70000000,955.27000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2245,237.19000000,324.06000000,955.27000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2245,236.93000000,324.71000000,955.27000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2345,224.16000000,326.73000000,958.03000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2345,209.75000000,315.62000000,958.03000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(3920,232.09000000,329.30000000,958.40000000,0.00000000,0.00000000,337.00000000); //
	CreateDynamicObject(9812,239.93000000,296.45000000,961.48000000,0.00000000,0.00000000,302.00000000); //
	CreateDynamicObject(9812,213.58000000,305.26000000,956.15000000,0.00000000,0.00000000,328.00000000); //
	CreateDynamicObject(1594,235.14000000,303.57000000,955.44000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1594,232.92000000,301.64000000,955.44000000,0.00000000,0.00000000,336.00000000); //
	CreateDynamicObject(1594,230.33000000,299.74000000,955.44000000,0.00000000,0.00000000,27.99000000); //
	CreateDynamicObject(949,221.25000000,322.07000000,955.60000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(949,228.09000000,310.25000000,955.60000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(949,215.12000000,317.33000000,955.60000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1523,217.55000000,333.12000000,954.91000000,0.00000000,0.00000000,1.70000000); //
	CreateDynamicObject(1523,220.60000000,333.27000000,954.91000000,0.00000000,0.00000000,181.70000000); //
	CreateDynamicObject(1557,239.22000000,322.99000000,955.70000000,0.00000000,0.00000000,292.00000000); //
	CreateDynamicObject(1557,240.45000000,319.92000000,955.70000000,0.00000000,0.00000000,112.00000000); //
	//HQ1
	CreateDynamicObject(14390, 1500.18359375, -991.798828125, 1961.9097900391, 0, 0, 270.99975585938);
	CreateDynamicObject(14420, 1500.15625, -991.7958984375, 1961.9197998047, 0, 0, 270.99975585938);
	CreateDynamicObject(2207, 1502.1552734375, -967.8466796875, 1958.6597900391, 0, 0, 269.24743652344);
	CreateDynamicObject(1723, 1505.1450195313, -973.93408203125, 1958.6597900391, 0, 0, 229.24169921875);
	CreateDynamicObject(1724, 1500.6354980469, -970.80291748047, 1958.6597900391, 0, 0, 110);
	CreateDynamicObject(1724, 1500.2703857422, -968.05548095703, 1958.6597900391, 0, 0, 65.9951171875);
	CreateDynamicObject(1491, 1501.572265625, -977.0947265625, 1958.6597900391, 0, 0, 180.49987792969);
	CreateDynamicObject(1491, 1498.55859375, -977.1416015625, 1958.6597900391, 0, 0, 0.9942626953125);
	CreateDynamicObject(2255, 1498.8928222656, -973.43481445313, 1960.7861328125, 0, 0, 91);
	CreateDynamicObject(2255, 1505.7049560547, -967.59051513672, 1960.3666992188, 0, 0, 271);
	CreateDynamicObject(2004, 1506.2282714844, -970.10791015625, 1959.8994140625, 0, 0, 271.49682617188);
	CreateDynamicObject(14399, 1519.0576171875, -999.869140625, 1958.6597900391, 0, 0, 270.99975585938);
	CreateDynamicObject(1723, 1494.9151611328, -980.32348632813, 1958.6597900391, 0, 0, 90.994262695313);
	CreateDynamicObject(1557, 1501.5511474609, -977.12225341797, 1958.6597900391, 0, 0, 0.75);
	CreateDynamicObject(14419, 1500.1655273438, -991.80847167969, 1961.9040527344, 0, 0, 271);
	CreateDynamicObject(1491, 1503.0302734375, -1001.376953125, 1958.6540527344, 0, 0, 0.7470703125);
	CreateDynamicObject(1491, 1506.0302734375, -1001.287109375, 1958.6540527344, 0, 0, 181.99401855469);
	CreateDynamicObject(1491, 1510.3721923828, -1005.6031494141, 1958.6540527344, 0, 0, 271);
	CreateDynamicObject(1491, 1510.4487304688, -1008.6371459961, 1958.6540527344, 0, 0, 90.749816894531);
	CreateDynamicObject(2773, 1524.4460449219, -1004.4266357422, 1959.1770019531, 0, 0, 270.75);
	CreateDynamicObject(2773, 1520.8095703125, -1004.4832763672, 1959.1770019531, 0, 0, 270.7470703125);
	CreateDynamicObject(1491, 1522.3410644531, -1016.7509765625, 1958.6540527344, 0, 0, 1.2470703125);
	CreateDynamicObject(1491, 1525.3735351563, -1016.6686401367, 1958.6540527344, 0, 0, 180.99694824219);
	CreateDynamicObject(14419, 1523.8466796875, -986.89453125, 1961.9040527344, 0, 0, 180.7470703125);
	CreateDynamicObject(1557, 1514.2672119141, -992.70330810547, 1958.6540527344, 0, 0, 91.00244140625);
	CreateDynamicObject(1557, 1514.2147216797, -989.67639160156, 1958.6540527344, 0, 0, 270.99987792969);
	CreateDynamicObject(1557, 1524.8740234375, -988.2216796875, 1958.6597900391, 0, 0, 181.24694824219);
	CreateDynamicObject(1557, 1521.8216552734, -988.28485107422, 1958.6597900391, 0, 0, 1.2469482421875);
	CreateDynamicObject(1557, 1524.2131347656, -988.17456054688, 1958.6597900391, 0, 0, 181.24694824219);
	CreateDynamicObject(1716, 1522.4510498047, -988.97271728516, 1958.6597900391, 0, 0, 0);
	CreateDynamicObject(1716, 1522.3978271484, -990.73693847656, 1958.6597900391, 0, 0, 0);
	CreateDynamicObject(1716, 1522.4642333984, -992.77496337891, 1958.6597900391, 0, 0, 0);
	CreateDynamicObject(1716, 1522.5109863281, -994.82012939453, 1958.6597900391, 0, 0, 0);
	CreateDynamicObject(1716, 1522.5621337891, -996.91900634766, 1958.6597900391, 0, 0, 0);
	CreateDynamicObject(1667, 1520.7059326172, -989.45764160156, 1960.1234130859, 0, 0, 0);
	CreateDynamicObject(1667, 1521.0570068359, -996.74822998047, 1960.1234130859, 0, 0, 0);
	CreateDynamicObject(1665, 1520.8421630859, -995.59490966797, 1960.0452880859, 0, 0, 0);
	CreateDynamicObject(1544, 1520.7891845703, -991.31561279297, 1960.0347900391, 0, 0, 0);
	CreateDynamicObject(1543, 1520.9841308594, -997.21447753906, 1960.0347900391, 0, 0, 0);
	CreateDynamicObject(1520, 1520.8876953125, -993.67993164063, 1960.0347900391, 0, 0, 0);
	CreateDynamicObject(1703, 1521.1630859375, -1014.169921875, 1958.6597900391, 0, 0, 270.99975585938);
	CreateDynamicObject(1703, 1521.091796875, -1007.337890625, 1958.6597900391, 0, 0, 270.99426269531);
	CreateDynamicObject(1703, 1517.0622558594, -1005.8983764648, 1958.6597900391, 0, 0, 0.999755859375);
	CreateDynamicObject(1704, 1521.1826171875, -1011.14453125, 1958.6597900391, 0, 0, 271.74682617188);
	CreateDynamicObject(1704, 1520.2272949219, -1005.6674194336, 1958.6597900391, 0, 0, 325.49682617188);
	CreateDynamicObject(2296, 1518.2818603516, -1013.0327758789, 1958.8238525391, 0, 0, 91);
	CreateDynamicObject(2231, 1517.9732666016, -1013.8695678711, 1958.8238525391, 0, 0, 89.5);
	CreateDynamicObject(2231, 1517.9364013672, -1009.6954345703, 1958.8238525391, 0, 0, 89.49462890625);
	CreateDynamicObject(2230, 1517.9798583984, -1013.3817749023, 1958.8238525391, 0, 0, 90.5);
	CreateDynamicObject(2230, 1517.9503173828, -1010.0684814453, 1958.8238525391, 0, 0, 90.499877929688);
	CreateDynamicObject(2010, 1516.3538818359, -1008.3795776367, 1958.8410644531, 0, 0, 335.5);
	CreateDynamicObject(1491, 1509.9692382813, -997.041015625, 1958.6540527344, 0, 0, 180.74401855469);
	CreateDynamicObject(1491, 1506.9468994141, -997.09582519531, 1958.6540527344, 0, 0, 0.7470703125);
	CreateDynamicObject(1975, 1506.2377929688, -969.03723144531, 1961.3587646484, 0, 0, 271.49963378906);
	CreateDynamicObject(18102, 1505.1940917969, -1011.9680786133, 1963.0642089844, 0, 0, 310);
	CreateDynamicObject(18102, 1503.9423828125, -1009.5258789063, 1963.0642089844, 0, 0, 52.995727539063);
	CreateDynamicObject(14809, 1497.236328125, -1011.8834228516, 1960.0705566406, 0, 359.5, 1.7500610351563);
	CreateDynamicObject(2290, 1504.4602050781, -1007.671875, 1958.6540527344, 0, 0, 269.5);
	CreateDynamicObject(2290, 1499.1900634766, -1004.596496582, 1958.6540527344, 0, 0, 0.74462890625);
	CreateDynamicObject(2118, 1511.99609375, -1020.310546875, 1958.6597900391, 0, 0, 323.99780273438);
	CreateDynamicObject(1754, 1503.2790527344, -1005.4385986328, 1958.6540527344, 0, 0, 316);
	CreateDynamicObject(1828, 1523.9884033203, -1011.3339233398, 1958.6597900391, 0, 0, 90.5);
	CreateDynamicObject(1665, 1520.8415527344, -990.39233398438, 1960.0452880859, 0, 0, 0);
	CreateDynamicObject(1975, 1511.8081054688, -1015.244934082, 1961.3587646484, 0, 0, 91.499633789063);
	CreateDynamicObject(11665, 1502.2169189453, -962.85766601563, 1959.3583984375, 0, 0, 90.247192382813);
	CreateDynamicObject(2118, 1502.0629882813, -976.49963378906, 1958.6597900391, 0, 0, 4.747802734375);
	CreateDynamicObject(13656, 1551.9526367188, -967.07678222656, 1958.6085205078, 0, 0, 0);
	CreateDynamicObject(2780, 1501.0096435547, -1008.9087524414, 1953.6463623047, 0, 0, 0);
	CreateDynamicObject(1978, 1511.8203125, -994.08935546875, 1959.7047119141, 0, 0, 181);
	CreateDynamicObject(2188, 1506.5743408203, -986.50921630859, 1959.6395263672, 0, 0, 53);
	CreateDynamicObject(2188, 1512.6618652344, -986.52166748047, 1959.6395263672, 0, 0, 320.24676513672);
	CreateDynamicObject(1753, 1503.9796142578, -996.37927246094, 1958.6540527344, 0, 0, 90.75);
	CreateDynamicObject(1753, 1503.9462890625, -992.53802490234, 1958.6540527344, 0, 0, 90.7470703125);
	CreateDynamicObject(1754, 1503.9467773438, -993.42321777344, 1958.6540527344, 0, 0, 91);
	CreateDynamicObject(630, 1504.1591796875, -989.515625, 1959.6791992188, 0, 0, 0);
	CreateDynamicObject(2075, 1507.0152587891, -986.98284912109, 1962.7476806641, 0, 0, 44.5);
	CreateDynamicObject(2075, 1512.5307617188, -986.81036376953, 1962.7476806641, 0, 0, 314.49462890625);
	CreateDynamicObject(2075, 1511.7906494141, -994.13696289063, 1962.7476806641, 0, 0, 267.98913574219);
	CreateDynamicObject(2118, 1483.3236083984, -965.51440429688, 1958.6597900391, 0, 0, 0.747802734375);
	CreateDynamicObject(14393, 1475.2730712891, -974.44543457031, 1960.8955078125, 0, 0.25, 91);
	CreateDynamicObject(3117, 1475.4562988281, -965.91058349609, 1958.4990234375, 0, 0, 4.5);
	CreateDynamicObject(1508, 1476.4786376953, -969.41345214844, 1957.9202880859, 0, 0, 91);
	CreateDynamicObject(1508, 1476.2802734375, -973.79919433594, 1958.1003417969, 0, 0, 90.999755859375);
	CreateDynamicObject(2606, 1476.9085693359, -971.978515625, 1962.0379638672, 45, 0, 181.25);
	CreateDynamicObject(2606, 1475.4268798828, -972.00634765625, 1962.0379638672, 44.994506835938, 0, 181.24694824219);
	CreateDynamicObject(2606, 1476.9083251953, -972.30499267578, 1961.7379150391, 43.192749023438, 0, 181.24694824219);
	CreateDynamicObject(2606, 1475.4533691406, -972.3232421875, 1961.7379150391, 43.192749023438, 0, 181.24694824219);
	CreateDynamicObject(1499, 1471.5791015625, -974.2236328125, 1958.6577148438, 0, 0, 3.9990234375);
	CreateDynamicObject(1508, 1476.6164550781, -976.94104003906, 1963.1070556641, 0, 0, 90.999755859375);
	CreateDynamicObject(1508, 1468.47265625, -974.1875, 1960.3160400391, 0, 0, 90.994262695313);
	CreateDynamicObject(2898, 1475.2658691406, -974.85394287109, 1959.7738037109, 90, 180, 180.99984741211);
	CreateDynamicObject(2898, 1477.7720947266, -974.80261230469, 1959.7738037109, 90, 179.99450683594, 180.99975585938);
	CreateDynamicObject(1812, 1476.9438476563, -980.66418457031, 1958.6942138672, 0, 0, 181.25);
	CreateDynamicObject(2602, 1479.3371582031, -982.59014892578, 1959.2198486328, 0, 0, 270.5);
	CreateDynamicObject(2229, 1479.9453125, -982.77160644531, 1958.0966796875, 0, 0.75, 327);
	CreateDynamicObject(2229, 1479.5587158203, -983.05169677734, 1958.0966796875, 0, 0.7470703125, 229.2470703125);
	CreateDynamicObject(1812, 1472.4555664063, -980.7177734375, 1958.6942138672, 0, 0, 180.74694824219);
	CreateDynamicObject(1812, 1474.7290039063, -980.66528320313, 1958.6942138672, 0, 0, 181.24694824219);
	CreateDynamicObject(3055, 1473.0811767578, -965.65734863281, 1963.2886962891, 0, 0, 1);
	CreateDynamicObject(1714, 1504.3415527344, -968.79644775391, 1958.6597900391, 0, 0, 270.5);
	CreateDynamicObject(1491, 1497.9476318359, -961.81866455078, 1958.6597900391, 0, 0, 270.99987792969);
	CreateDynamicObject(1491, 1498.0400390625, -964.8486328125, 1958.6597900391, 0, 0, 91.249755859375);
	CreateDynamicObject(16780, 1501.9887695313, -968.91729736328, 1963.0889892578, 0, 0, 0);
	CreateDynamicObject(1361, 1514.8168945313, -997.72381591797, 1959.4030761719, 0, 0, 0);
	CreateDynamicObject(2179, 1509.8312988281, -1001.8726806641, 1960.3641357422, 0, 0, 0);
	CreateDynamicObject(2179, 1498.6851806641, -1002.125, 1960.3641357422, 0, 0, 0);
	CreateDynamicObject(2179, 1509.791015625, -1011.5696411133, 1960.3641357422, 0, 0, 0);
	CreateDynamicObject(627, 1526.0850830078, -1021.0240478516, 1960.5051269531, 0, 0, 0);
	CreateDynamicObject(1726, 1500.4014892578, -1000.8121948242, 1958.6597900391, 0, 0, 135.25);
	CreateDynamicObject(630, 1515.3798828125, -1021.49609375, 1959.6920166016, 0, 0, 0);
	CreateDynamicObject(630, 1511.7371826172, -1017.6530761719, 1959.6920166016, 0, 0, 0);
	CreateDynamicObject(2946, 2852.5109863281, -1367.5754394531, 13.170822143555, 0, 0, 0);
	CreateDynamicObject(2946, 2852.5114746094, -1364.4173583984, 13.170822143555, 0, 0, 180.5);
	CreateDynamicObject(3051, 2852.4406738281, -1366.7572021484, 15.034826278687, 0, 0, 46.25);
	CreateDynamicObject(3051, 2852.4438476563, -1365.6307373047, 15.034826278687, 0, 0, 46.246948242188);
	CreateDynamicObject(3051, 2852.431640625, -1365.029296875, 15.034826278687, 0, 0, 46.246948242188);
	CreateDynamicObject(1703, 1526.3291015625, -993.81323242188, 1958.6668701172, 0, 0, 270.99975585938);
	CreateDynamicObject(1703, 1526.4135742188, -996.71307373047, 1958.6668701172, 0, 0, 270.99975585938);
	CreateDynamicObject(1704, 1526.3977050781, -1000.6713256836, 1958.6668701172, 0, 0, 271.74682617188);
	CreateDynamicObject(1704, 1526.3055419922, -991.16131591797, 1958.6668701172, 0, 0, 271.74682617188);
	CreateDynamicObject(630, 1526.3923339844, -1003.6152954102, 1959.6920166016, 0, 0, 0);
	CreateDynamicObject(630, 1526.2611083984, -988.73828125, 1959.6920166016, 0, 0, 0);
	CreateDynamicObject(2257, 1527.05078125, -1009.7938842773, 1961.6326904297, 0, 0, 271);
	CreateDynamicObject(1508, 1470.8626708984, -965.81799316406, 1960.3160400391, 0, 0, 90.994262695313);
	CreateDynamicObject(1499, 1473.99609375, -965.87084960938, 1958.6597900391, 0, 0, 2.2490234375);
	CreateDynamicObject(1499, 1477.0157470703, -965.75787353516, 1958.6597900391, 0, 0, 181.74668884277);
	CreateDynamicObject(1828, 1499.9688720703, -974.62524414063, 1958.6597900391, 0, 0, 268.75);
	CreateDynamicObject(1824, 1508.7813720703, -989.97473144531, 1959.1650390625, 0, 0, 0);
	CreateDynamicObject(13295, 1883.9906005859, -1868.0119628906, 18.908676147461, 0, 0, 89.499969482422);
	CreateDynamicObject(4100, 1886.4554443359, -1879.7012939453, 14.173237800598, 0, 0, 321);
	CreateDynamicObject(4100, 1874.9987792969, -1879.7524414063, 14.173237800598, 0, 0, 319.49853515625);
	return 1;
}

public OnPlayerConnect(playerid)
{
	SendClientMessage(playerid, COLOR_WHITE, "Welcome to McClain's Test Server!");
	return 1;
}

//Commands

CMD:givedeag(playerid, params[])
{
	GivePlayerWeapon(playerid, 24, 999);
	return 1;
}

CMD:givem4(playerid, params[])
{
	GivePlayerWeapon(playerid, 31, 99999);
	return 1;
}
CMD:help(playerid, params[])
{
	SendClientMessage(playerid, COLOR_WHITE,"___________________________________");
	SendClientMessage(playerid, COLOR_WHITE,"PLAYER COMMANDS: /help /veh");
	if(IsPlayerAdmin(playerid))SendClientMessage(playerid, COLOR_WHITE, "ADMIN COMMANDS: /gtc /doorhelp");
	SendClientMessage(playerid, COLOR_WHITE,"____________________________________");
	return 1;
}

CMD:doorhelp(playerid, params[])
{
	if(IsPlayerAdmin(playerid)) SendClientMessage(playerid, COLOR_WHITE, "-------------------------------------------------");
	if(IsPlayerAdmin(playerid)) SendClientMessage(playerid, COLOR_WHITE, "DOOR COMMANDS: /createdoor   /editdoor   /doorname");
	if(IsPlayerAdmin(playerid)) SendClientMessage(playerid, COLOR_WHITE, "-------------------------------------------------");
	return 1;
}

CMD:gtc(playerid, params[])
{
	new interior,Float:x,Float:y,Float:z;
	if(!IsPlayerAdmin(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "You need to be an administator to use this command.");
	if(sscanf(params,"ifff",interior,x,y,z)) return SendClientMessage(playerid, 0xFF0000FF, "Usage: /gtc [int id] [x] [y] [z]");
	SetPlayerPos(playerid,x,y,z);
	SetPlayerInterior(playerid,interior);
	return 1;
}


//Door System

CMD:enter(playerid, params[])
{
	for(new i = 0; i < sizeof(DoorInfo); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, DoorInfo[i][dEntranceX], DoorInfo[i][dEntranceY], DoorInfo[i][dEntranceZ]))
		{
			if(DoorInfo[i][dExitX] == 0) return SendClientMessage(playerid, COLOR_WHITE, "This door has no interior.");
			SetPlayerPos(playerid, DoorInfo[i][dExitX], DoorInfo[i][dExitY], DoorInfo[i][dExitZ]+2.0);
			SetPlayerInterior(playerid, DoorInfo[i][dExitInt]);
			SetPlayerVirtualWorld(playerid, DoorInfo[i][dExitVW]);
		}
	}
	return 1;
}

CMD:exit(playerid, params[])
{
	for(new i = 0; i < sizeof(DoorInfo); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, DoorInfo[i][dExitX], DoorInfo[i][dExitY], DoorInfo[i][dExitZ]))
		{
			SetPlayerPos(playerid, DoorInfo[i][dEntranceX], DoorInfo[i][dEntranceY], DoorInfo[i][dEntranceZ]);
			SetPlayerInterior(playerid, DoorInfo[i][dEntranceInt]);
			SetPlayerVirtualWorld(playerid, DoorInfo[i][dEntranceVW]);
		}
	}
	return 1;
}

CMD:createdoor(playerid, params[])
{
	if(!IsPlayerAdmin(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "You need to be an administator to use this command!");
	new doorname[128], string[254];
	if(sscanf(params, "s[128]", doorname)) return SendClientMessage(playerid, 0xFF0000FF, "Usage: /createentrance [name]");
	
	new id = GetAvailableID();
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);

	DoorIDTaken[id] = 1;
	DoorInfo[id][dEntranceX] = x;
	DoorInfo[id][dEntranceY] = y;
	DoorInfo[id][dEntranceZ] = z;
	DoorInfo[id][dPickUpModel] = 1318;
	DoorInfo[id][dName] = doorname;
	DoorInfo[id][dEntranceInt] = GetPlayerInterior(playerid);
	DoorInfo[id][dEntranceVW] = GetPlayerVirtualWorld(playerid);

	format(string, sizeof(string), "%s\nDoor ID: %d", DoorInfo[id][dName], id);
	DoorInfo[id][dLabel] = CreateDynamic3DTextLabel(string, COLOR_WHITE, DoorInfo[id][dEntranceX], DoorInfo[id][dEntranceY], DoorInfo[id][dEntranceZ]+0.9, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,-1,-1,-1,50.0, -1,0);
	DoorInfo[id][dPickup] = CreateDynamicPickup(1318, 23, DoorInfo[id][dEntranceX], DoorInfo[id][dEntranceY], DoorInfo[id][dEntranceZ], -1, -1, -1, 50.0);
	SaveDoors();
	return 1;
}

CMD:doorname(playerid, params[])
{
	if(!IsPlayerAdmin(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "You need to be an administrator to use this command!");
	new string[128], id, doorname[128];
	if(sscanf(params, "ds[128]", id, doorname)) return SendClientMessage(playerid, COLOR_WHITE, "USAGE: /doorname [doorid] [name]");
	if (id < 1 || id > MAX_DOORS)
	{
		format(string, sizeof(string), "ID cannot be below 1 or above %d.", MAX_DOORS);
  		SendClientMessage(playerid, COLOR_GREY, string);
    	return 1;
	}
 	if(!DoorIDTaken[id])
	{
   		SendClientMessage(playerid, COLOR_GREY, "ID not taken.");
		return 1;
	}
	DoorInfo[id][dName] = doorname;
	DestroyDynamic3DTextLabel(DoorInfo[id][dLabel]);
	format(string, sizeof(string), "%s\nDoor ID: %d",DoorInfo[id][dName], id);
	DoorInfo[id][dLabel] = CreateDynamic3DTextLabel(string, COLOR_WHITE, DoorInfo[id][dEntranceX], DoorInfo[id][dEntranceY], DoorInfo[id][dEntranceZ]+0.9, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,-1,-1,-1,50.0, -1,0);
	SaveDoors();
	return 1;
}

CMD:editdoor(playerid, params[])
{
	if(!IsPlayerAdmin(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "You need to be an administrator to use this command!");
	new string[128], option[32], id, amount, Float: Pos[3];
	if(sscanf(params, "ds[32]D(10)", id, option, amount))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /editdoor [doorid] [name] [amount]");
	    SendClientMessage(playerid, COLOR_WHITE, "Available names: exterior, interior, pickup, delete");
	    return 1;
	}
	if (id < 1 || id > MAX_DOORS)
	{
		format(string, sizeof(string), "ID cannot be below 1 or above %d.", MAX_DOORS);
		SendClientMessage(playerid, COLOR_GREY, string);
		return 1;
	}
	if(!DoorIDTaken[id])
 	{
		SendClientMessage(playerid, COLOR_GREY, "ID not taken.");
		return 1;
	}

	if(strcmp(option, "exterior", true) == 0)
	{
	    new dname[128];
	    GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	    DoorInfo[id][dEntranceX] = Pos[0];
	    DoorInfo[id][dEntranceY] = Pos[1];
	    DoorInfo[id][dEntranceZ] = Pos[2];
	    DoorInfo[id][dEntranceVW] = GetPlayerVirtualWorld(playerid);
	    DoorInfo[id][dEntranceInt] = GetPlayerInterior(playerid);

	    DestroyDynamicPickup(DoorInfo[id][dPickup]);
	    DestroyDynamic3DTextLabel(DoorInfo[id][dLabel]);

		format(dname, sizeof(dname), "[%s]\nID: %d",DoorInfo[id][dName], id);
		DoorInfo[id][dLabel] = CreateDynamic3DTextLabel(dname, COLOR_WHITE, DoorInfo[id][dEntranceX], DoorInfo[id][dEntranceY], DoorInfo[id][dEntranceZ]+0.9, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 50.0);
		DoorInfo[id][dPickup] = CreateDynamicPickup(DoorInfo[id][dPickUpModel], 23, Pos[0], Pos[1], Pos[2], 0, 0, -1, 50.0);
		SaveDoors();
	}
	else if(strcmp(option, "interior", true) == 0)
	{
		new Float:x1,Float:y1,Float:z1;
	    GetPlayerPos(playerid, x1,y1,z1);
	    DoorInfo[id][dExitX] = x1;
	    DoorInfo[id][dExitY] = y1;
	    DoorInfo[id][dExitZ] = z1;
	    DoorInfo[id][dExitVW] = GetPlayerVirtualWorld(playerid);
	    DoorInfo[id][dExitInt] = GetPlayerInterior(playerid);

	    DestroyDynamicPickup(DoorInfo[id][dPickupInt]);

	    DoorInfo[id][dPickupInt] = CreateDynamicPickup(DoorInfo[id][dPickUpModel], 23,  DoorInfo[id][dExitX],  DoorInfo[id][dExitY],  DoorInfo[id][dExitZ], -1, -1, -1, 50.0);
	    SendClientMessage(playerid, COLOR_WHITE, "You have succesfully changed the door's interior.");
	    SaveDoors();
	}
	else if(strcmp(option, "pickup", true) == 0)
	{
	    DestroyDynamicPickup(DoorInfo[id][dPickup]);
	    DestroyDynamicPickup(DoorInfo[id][dPickupInt]);
	    DoorInfo[id][dPickUpModel] = amount;
	    DoorInfo[id][dPickup] = CreateDynamicPickup(amount, 23, DoorInfo[id][dEntranceX], DoorInfo[id][dEntranceY], DoorInfo[id][dEntranceZ], 0, 0, -1, 50.0);
	    DoorInfo[id][dPickupInt] = CreateDynamicPickup(amount, 23,  DoorInfo[id][dExitX],  DoorInfo[id][dExitY],  DoorInfo[id][dExitZ], 0, 0, -1, 50.0);
	    SaveDoors();
	}
	else if(strcmp(option, "delete", true) == 0)
	{
	    new file[128];
	    DoorIDTaken[id] = 0;
	    DoorInfo[id][dEntranceX] = 0.0;
	    DoorInfo[id][dEntranceY] = 0.0;
	    DoorInfo[id][dEntranceZ] = 0.0;
	    DoorInfo[id][dExitX] = 0.0;
	    DoorInfo[id][dExitY] = 0.0;
	    DoorInfo[id][dExitZ] = 0.0;
	    DoorInfo[id][dExitVW] = 0;
	    DoorInfo[id][dExitInt] = 0;
	    DoorInfo[id][dEntranceVW] = 0;
	    DoorInfo[id][dEntranceInt] = 0;
	    DoorInfo[id][dPickUpModel] = 0;
	    DestroyDynamic3DTextLabel(DoorInfo[id][dLabel]);
	    DestroyDynamicPickup(DoorInfo[id][dPickup]);
        SendClientMessage(playerid, COLOR_WHITE, "Door System: Door Deleted!");
	    SaveDoors();
		format(file, sizeof(file), "Doors/%d.ini", id);
		if(fexist(file)) fremove(file);
	}
	return 1;
}


//Safe System
CMD:createsafe(playerid, params[])
{
	if(!IsPlayerAdmin(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "You need to be an administrator to use this command!");
	new id = GetAvailableSID();
	new safename[128], string[254];
	if(sscanf(params, "s[128]", safename)) return SendClientMessage(playerid, 0xFF0000FF, "Usage: /createsafe [safe name]");
	
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);

	SafeIDTaken[id] = 1;
	SafeInfo[id][sPosX] = x;
	SafeInfo[id][sPosY] = y;
	SafeInfo[id][sPosZ] = z;
	SafeInfo[id][sInt] = GetPlayerInterior(playerid);
	SafeInfo[id][sVW] = GetPlayerVirtualWorld(playerid);
	SafeInfo[id][sName] = safename;
	SafeInfo[id][sID] = id;



	format(string, sizeof(string), "%s's Safe\nSafe ID: %d", SafeInfo[id][sName], id);
	SafeInfo[id][sLabel] = CreateDynamic3DTextLabel(string, COLOR_WHITE, SafeInfo[id][sPosX], SafeInfo[id][sPosY], SafeInfo[id][sPosZ], 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1,-1,-1, 50.0, -1, 0);
	SafeInfo[id][sPickup] = CreateDynamicPickup(1210, 23,SafeInfo[id][sPosX], SafeInfo[id][sPosY], SafeInfo[id][sPosZ], -1, -1, -1, 50.0);
	SafeInfo[id][sGun1] = 0;
	SaveSafes();
	return 1;
}	

CMD:editsafe(playerid, params[])
{
	if(!IsPlayerAdmin(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "You need to be an administrator to use this command!");
	new string[128], option[32], id, Float: Pos[3];
	if(sscanf(params, "ds[32]", id, option))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /editsafe [safeid] [option]");
	    SendClientMessage(playerid, COLOR_WHITE, "Available options: loc, delete");
	    return 1;
	}
	if (id < 1 || id > MAX_SAFES)
	{
		format(string, sizeof(string), "ID cannot be below 1 or above %d.", MAX_SAFES);
		SendClientMessage(playerid, COLOR_GREY, string);
		return 1;
	}
	if(!SafeIDTaken[id])
 	{
		SendClientMessage(playerid, COLOR_GREY, "ID not taken.");
		return 1;
	}

	if(strcmp(option, "loc", true) == 0)
	{
	    new sname[128];
	    GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	    SafeInfo[id][sPosX] = Pos[0];
	    SafeInfo[id][sPosY] = Pos[1];
	    SafeInfo[id][sPosZ] = Pos[2];
	    SafeInfo[id][sVW] = GetPlayerVirtualWorld(playerid);
	    SafeInfo[id][sInt] = GetPlayerInterior(playerid);

	    DestroyDynamicPickup(SafeInfo[id][sPickup]);
	    DestroyDynamic3DTextLabel(SafeInfo[id][sLabel]);

		format(sname, sizeof(sname), "%s's Safe\nSafeID: %d",SafeInfo[id][sName], id);
		SafeInfo[id][sLabel] = CreateDynamic3DTextLabel(sname, COLOR_WHITE, SafeInfo[id][sPosX], SafeInfo[id][sPosY], SafeInfo[id][sPosZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 50.0);
		SafeInfo[id][sPickup] = CreateDynamicPickup(1210, 23, Pos[0], Pos[1], Pos[2], 0, 0, -1, 50.0);
		SaveSafes();
	}
	else if(strcmp(option, "delete", true) == 0)
	{
	    new file[128];
	    SafeIDTaken[id] = 0;
	    SafeInfo[id][sPosX] = 0.0;
	    SafeInfo[id][sPosY] = 0.0;
	    SafeInfo[id][sPosZ] = 0.0;
	    SafeInfo[id][sVW] = 0;
	    SafeInfo[id][sInt] = 0;
	    DestroyDynamic3DTextLabel(SafeInfo[id][sLabel]);
	    DestroyDynamicPickup(SafeInfo[id][sPickup]);
        SendClientMessage(playerid, COLOR_WHITE, "Safe System: Safe Deleted!");
	    SaveSafes();
		format(file, sizeof(file), "Safes/%d.ini", id);
		if(fexist(file)) fremove(file);
	}
	return 1;
}

CMD:safe(playerid, params[])
{
	for(new i = 0; i < sizeof(SafeInfo); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, SafeInfo[i][sPosX], SafeInfo[i][sPosY], SafeInfo[i][sPosZ]))
		{
			ShowPlayerDialog(playerid, SAFE_DIALOG_1, DIALOG_STYLE_LIST, "Safe", "Check\nPut\nTake", "Proceed", "Exit");
		}
	}
	return 1;
}
/*CMD:checksafe(playerid, params[])
{
	for(new i = 0; i < sizeof(SafeInfo); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, SafeInfo[i][sPosX], SafeInfo[i][sPosY], SafeInfo[i][sPosZ]))
		{
			new gunname[32];
	        new string [128];
	        format(string, sizeof(string), "%s's Safe(%d) Safe Contents", SafeInfo[i][sName], SafeInfo[i][sID]);
	        SendClientMessage(playerid, COLOR_CYAN, string);
	        if(SafeInfo[i][sGun1] != 0)
	        {
	            GetWeaponName(SafeInfo[i][sGun1],gunname,sizeof(gunname));
	            format(string,sizeof(string),"Weapon Slot 1: %s", gunname,SafeInfo[i][sGun1]);
	            SendClientMessage(playerid,COLOR_WHITE,string);
	            return 1;
	        }
	        if(SafeInfo[i][sGun1] == 0)
	        {
		        SendClientMessage(playerid, COLOR_WHITE, "Weapon Slot 1: None");
		        return 1;
	    	}
		}
	}
	return 1;

}*/
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(dialogid == SAFE_DIALOG_1)
	{
		if(response)
		{
			switch(listitem)
			{
				case 0://Check
				{
					for(new i = 0; i < sizeof(SafeInfo); i++)
					{
						if(IsPlayerInRangeOfPoint(playerid, 2.0, SafeInfo[i][sPosX], SafeInfo[i][sPosY], SafeInfo[i][sPosZ]))
						{
							new gunname[32];
					        new string [128];
					        format(string, sizeof(string), "|----- %s's Safe (Safe ID:%d) Safe Contents -----|", SafeInfo[i][sName], SafeInfo[i][sID]);
					        SendClientMessage(playerid, COLOR_CYAN, string);
					        if(SafeInfo[i][sGun1] != 0)
					        {
					            GetWeaponName(SafeInfo[i][sGun1],gunname,sizeof(gunname));
					            format(string,sizeof(string),"Weapon Slot 1: %s", gunname,SafeInfo[i][sGun1]);
					            SendClientMessage(playerid,COLOR_WHITE,string);
					            return 1;
					        }
					        if(SafeInfo[i][sGun1] == 0)
					        {
						        SendClientMessage(playerid, COLOR_WHITE, "Weapon Slot 1: None");
						        return 1;
					    	}
						}
					}
					return 1;
				}
				case 1://Put
				{
					ShowPlayerDialog(playerid, SAFEPUT_DIALOG, DIALOG_STYLE_LIST, "Safe Put", "Weapon\nKevlar", "Next", "Exit");
				}
				case 2://Take
				{
					ShowPlayerDialog(playerid, SAFETAKE_DIALOG, DIALOG_STYLE_LIST, "Safe Take", "Weapon\nKevlar", "Next", "Exit");
				}
			}
		}
	}
	if(dialogid == SAFEPUT_DIALOG)
	{
		if(response)
		{
			switch(listitem)
			{
				case 0://To Weapon Slots
				{
					ShowPlayerDialog(playerid, SAFEWEPSLOT_DIALOG, DIALOG_STYLE_LIST, "Safe Weapon Slots", "Slot 1", "Put", "Exit");
				}
				case 1://TO Kev Slots
				{
					ShowPlayerDialog(playerid, SAFEKEVSLOT_DIALOG, DIALOG_STYLE_LIST, "Safe Kevlar Slots", "Slot 1", "Put", "Exit");
				}
			}
		}
	}
	if(dialogid == SAFETAKE_DIALOG)
	{
		if(response)
		{
			switch(listitem)
			{
				case 0://TakeWepSlots
				{
					ShowPlayerDialog(playerid, SAFETAKEWEP_DIALOG, DIALOG_STYLE_LIST, "Safe Weapon Slots", "Slot 1", "Take", "Exit");
				}
				case 1://TakeKevSlots
				{
					ShowPlayerDialog(playerid, SAFETAKEKEV_DIALOG, DIALOG_STYLE_LIST, "Safe Weapon Slots", "Slot 1", "Take", "Exit");
				}
			}
		}
	}
	if(dialogid == SAFEWEPSLOT_DIALOG)
	{
		if(response)
		{
			switch(listitem)
			{
				case 0://WepSlot1Put
				{
					for(new i = 0; i < sizeof(SafeInfo); i++)
					{
						if(IsPlayerInRangeOfPoint(playerid, 2.0, SafeInfo[i][sPosX], SafeInfo[i][sPosY], SafeInfo[i][sPosZ]))
						{
							if(SafeInfo[i][sGun1] != 0)
			                {
			                	SendClientMessage(playerid,COLOR_DRED,"That slot has already filled up.");
			                	return 1;
			                }
			                new WeapID = GetPlayerWeapon(playerid);
			                if(!WeapID)
			                {
			                    SendClientMessage(playerid,COLOR_DRED,"You don't have any weapon on your hand to store.");
			                    return 1;
			                }
			                SafeInfo[i][sGun1] = WeapID;
			                SendClientMessage(playerid,COLOR_WHITE,"You have successfully put your weapon in the locker");
			                SaveSafes();
			                return 0;
						}
					}
					return 1;
				}
			}
		}
	}
	return 0;
}
